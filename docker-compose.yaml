name: '${APP_NAME}'

networks:
  app_network:
    external: true

volumes:
    dbdata:
    redisdata:
    metabase-data:
    
services:
    fpm: &app-container
        build:
            context: ./environment/prod
            dockerfile: Dockerfile
        container_name: ${APP_NAME}-fpm
        stop_grace_period: 10s
        user: "1000:1001"
        networks:
            - app_network
        volumes:
            - &data-app ./:/app
            - ./environment/prod/fpm/www.conf:/usr/local/etc/php-fpm.d/www.conf
            - ./environment/prod/fpm/php.ini:/usr/local/etc/php/php.ini
        environment:
            DB_HOST: postgres
            DB_DATABASE: &db-name ${DB_DATABASE}
            DB_USERNAME: &db-username ${DB_USERNAME}
            DB_PASSWORD: &db-password ${DB_PASSWORD}
            APP_ENV: ${APP_ENV}
            HOME: /app
        working_dir: /app
        depends_on:
            - postgres

    laravel-worker:
        <<: *app-container
        container_name: ${APP_NAME}-laravel-worker
        command: sh -lc "php artisan queue:work --queue=default --sleep=1 --tries=3 --timeout=300"
        restart: always
        depends_on:
            - postgres
            - redis

    nginx:
        image: nginx:1.27-alpine
        container_name: ${APP_NAME}-nginx
        stop_grace_period: 10s
        ports:
            - 80:80
        restart: always
        volumes:
            - *data-app
            - ./environment/prod/nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./environment/prod/nginx/site.conf:/etc/nginx/site.conf
            - ./nginx-logs:/var/log/nginx
        networks:
            - app_network
        depends_on:
            - fpm

    postgres:
        image: postgres:17.2-alpine
        container_name: ${APP_NAME}-db
        networks:
            - app_network
        deploy:
            replicas: 1
            restart_policy:
                condition: on-failure
        environment:
            POSTGRES_DB: ${DB_DATABASE}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
        restart: always
        volumes:
            - dbdata:/var/lib/postgresql/data

    redis:
        image: redis:7.4-alpine
        container_name: ${APP_NAME}-redis
        stop_grace_period: 10s
        restart: always
        networks:
            - app_network
        volumes:
            - redisdata:/data

    frontend:
        image: node:24-alpine3.21
        container_name: ${APP_NAME}-frontend
        working_dir: /app
        volumes:
            - ./:/app
        command: sh -c "npm install && npm run build"
        depends_on:
            - fpm

    metabase:
        image: metabase/metabase:latest
        container_name: ${APP_NAME}-metabase
        restart: always
        ports:
            - "3000:3000"
        volumes:
            - metabase-data:/metabase.db
        networks:
            - app_network